@import "normalize.scss";
@import "poly-fluid-sizing.scss";
@import "colors.scss";

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

#avatar-container {
  background-image: url("/img/space.jpg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  border: 5px solid white;
  border-radius: 100%;
  min-height: 32px;
  min-width: 32px;
  transition: transform 0.3s ease-in-out;
  user-select: none;

  & img {
    height: auto;
    max-width: 100%;
  }
}

article {
  align-items: center;
  color: $secondary;
  display: flex;
  flex-direction: column;
  font-family: Arial, Helvetica, sans-serif;
  height: 100%;
  overflow: auto;
  padding: 0 25px;
}

button {
  background: none;
  border: none;
  cursor: pointer;
  outline: none;
}

h2 {
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 700;
  letter-spacing: -1px;
  margin: 15px 0;
  text-align: center;

  $font-size: (
    384px: 24px,
    576px: 26px,
    768px: 32px,
    992px: 36px
  );
  @include poly-fluid-sizing("font-size", $font-size);
}

header {
  align-items: center;
  background: $primary;
  display: flex;
  flex-direction: column;
  justify-content: center;
  overflow: auto;
  padding-bottom: 0;

  $padding: (
    384px: 20px,
    576px: 30px,
    768px: 40px,
    992px: 50px
  );
  @include poly-fluid-sizing("padding-left", $padding);
  @include poly-fluid-sizing("padding-right", $padding);
  @include poly-fluid-sizing("padding-top", $padding);

  & nav {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: 25px;
  }

  & nav a {
    display: inline-block;
    margin: 10px;
  }
}

p {
  font-family: Arial, Helvetica, sans-serif;
  margin: 0px;
  padding: 0 25px;
  text-align: center;

  $font-size: (
    384px: 16px,
    576px: 20px,
    768px: 22px,
    992px: 24px
  );
  @include poly-fluid-sizing("font-size", $font-size);

  $padding: (
    384px: 10px,
    576px: 15px,
    768px: 20px,
    992px: 25px
  );
  @include poly-fluid-sizing("padding", $padding);
}

.projects {
  margin-top: 15px;
}

.repository {
  border: 3px solid $primary;
  border-radius: 5px;
  display: flex;
  flex: 1;
  flex-direction: column;
  height: auto;
  justify-content: center;
  margin: 15px;
  min-width: 384px;
  padding: 40px 0;

  @media screen and (max-width: 384px) {
    min-width: unset;
    padding: 40px 20px;
  }

  & a,
  & p,
  & span {
    color: $primary;
    word-wrap: break-word;
  }

  & .repository-name {
    font-weight: 600;
    display: block;
    text-align: center;
    text-decoration: none;

    $font-size: (
      384px: 20px,
      576px: 22px,
      768px: 24px,
      992px: 26px
    );
    @include poly-fluid-sizing("font-size", $font-size);
  }

  & .repository-description,
  & .repository-language {
    $font-size: (
      384px: 14px,
      576px: 16px,
      768px: 18px,
      992px: 20px
    );
    @include poly-fluid-sizing("font-size", $font-size);
  }

  & .repository-language {
    margin-bottom: 15px;
    padding: 0;
  }

  & .repository-language > span {
    border-radius: 50%;
    content: "";
    display: inline-block;
    vertical-align: top;

    $size: (
      384px: 14px,
      576px: 16px,
      768px: 18px,
      992px: 20px
    );
    @include poly-fluid-sizing("height", $size);
    @include poly-fluid-sizing("width", $size);
  }
}

.repository-statistics {
  display: flex;
  flex-direction: row;
  justify-content: center;

  & > div {
    margin: 0 10px;
  }
}

svg {
  display: block;
  height: auto;
  max-width: 100%;
}

.projects,
.tools {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
}

.tools {
  width: 80%;
}

.tools > a,
.tools > svg {
  display: block;
  margin: 25px 15px;

  @media screen and (min-width: 1250px) {
    margin: 25px auto;
  }
}

.tools > svg,
.tools > a > svg {
  filter: url(".grayscale");
  filter: grayscale(100%);
  min-height: 32px;
  min-width: 32px;
  transition: filter 0.3s cubic-bezier(0.39, 0.575, 0.565, 1);

  $height: (
    384px: 56px,
    576px: 84px,
    768px: 96px,
    992px: 128px
  );
  @include poly-fluid-sizing("height", $height);

  &:hover {
    filter: none;
  }
}

.wave {
  fill: $primary;
}

.wave-flipped {
  transform: rotateX(180deg);
}

.wave-inverted {
  background-color: $primary;
  fill: $secondary;
}
